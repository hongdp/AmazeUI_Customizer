{
  "name": "browserify-sign",
  "version": "3.0.2",
  "description": "browserify-sign [![Build Status](https://travis-ci.org/crypto-browserify/browserify-sign.svg)](https://travis-ci.org/crypto-browserify/browserify-sign) ===",
  "main": "index.js",
  "browser": "browser.js",
  "scripts": {
    "test": "node test/index.js | tspec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/crypto-browserify/browserify-sign.git"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "bn.js": "^2.0.0",
    "browserify-rsa": "^2.0.0",
    "create-hash": "^1.1.0",
    "create-hmac": "^1.1.2",
    "elliptic": "^3.0.0",
    "inherits": "^2.0.1",
    "parse-asn1": "^3.0.0"
  },
  "devDependencies": {
    "tap-spec": "^1.0.1",
    "tape": "^3.0.3"
  },
  "readme": "browserify-sign [![Build Status](https://travis-ci.org/crypto-browserify/browserify-sign.svg)](https://travis-ci.org/crypto-browserify/browserify-sign)\n===\n\na package to duplicate the functionality of node's crypto public key functions, much of this is based on [Fedor Indutny's](https://github.com/indutny) work on [tls.js](https://github.com/indutny/tls.js).\n\n# done\n\n- basic rsa signing and verifying with the right api\n\n# todo\n\n- ~~tests to make sure we actually did it~~\n- ~~chinese remainder theorom?~~\n- ~~eliptical curve signing~~\n- ~~publicEncrypt and privateDecrypt?~~ (out of scope)\n- ~~other key encodings (non rss format public keys)~~\n- dsa keys?\n- ~~keys with passwords~~",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/crypto-browserify/browserify-sign/issues"
  },
  "homepage": "https://github.com/crypto-browserify/browserify-sign#readme",
  "_id": "browserify-sign@3.0.2",
  "_from": "browserify-sign@>=3.0.1 <4.0.0"
}
