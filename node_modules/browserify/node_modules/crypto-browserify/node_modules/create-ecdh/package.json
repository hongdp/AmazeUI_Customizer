{
  "name": "create-ecdh",
  "version": "2.0.1",
  "description": "createECDH but browserifiable",
  "main": "index.js",
  "scripts": {
    "test": "node test.js | tspec"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/crypto-browserify/createECDH.git"
  },
  "keywords": [
    "diffie",
    "hellman",
    "diffiehellman",
    "ECDH"
  ],
  "author": {
    "name": "Calvin Metcalf"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/crypto-browserify/createECDH/issues"
  },
  "homepage": "https://github.com/crypto-browserify/createECDH",
  "dependencies": {
    "bn.js": "^2.0.0",
    "elliptic": "^3.0.0"
  },
  "devDependencies": {
    "tap-spec": "^1.0.1",
    "tape": "^3.0.1"
  },
  "readme": "createECDH [![Build Status](https://travis-ci.org/crypto-browserify/createECDH.svg)](https://travis-ci.org/crypto-browserify/createECDH)\n====\n\nIn io.js or node >= 0.11 this module is just a shortcut to crypto.createECDH.  In node <= 0.11 or the browser this is a pure JavaScript implimentation, more specifically a wrapper around [elliptic](https://github.com/indutny/elliptic), to give it the same API as node. `secp256k1`, `secp224r1` (aka p-224), `prime256v1` (aka p-256, secp256r1), `prime192v1` (aka p-192, secp192r1) curves all work in both this library and node (though only the highlighted name will work in node).",
  "readmeFilename": "readme.md",
  "_id": "create-ecdh@2.0.1",
  "_from": "create-ecdh@>=2.0.0 <3.0.0"
}
