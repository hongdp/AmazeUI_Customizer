{
  "name": "sha.js",
  "description": "streaming sha1 hash in pure javascript",
  "version": "2.4.2",
  "homepage": "https://github.com/crypto-browserify/sha.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/crypto-browserify/sha.js.git"
  },
  "dependencies": {
    "inherits": "^2.0.1"
  },
  "devDependencies": {
    "buffer": "~2.3.2",
    "hash-test-vectors": "^1.3.1",
    "standard": "^4.0.0",
    "tape": "~2.3.2",
    "typedarray": "0.0.6"
  },
  "bin": {
    "sha.js": "./bin.js"
  },
  "scripts": {
    "prepublish": "npm ls && npm run unit",
    "lint": "standard",
    "test": "npm run lint && npm run unit",
    "unit": "set -e; for t in test/*.js; do node $t; done;"
  },
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "dominictarr.com"
  },
  "license": "MIT",
  "readme": "# sha.js\n\nStreamable SHA hashes in pure javascript.\n\n[![build status](https://secure.travis-ci.org/dominictarr/sha.js.png)](http://travis-ci.org/dominictarr/sha.js)\n\n[![testling badge](https://ci.testling.com/dominictarr/sha.js.png)](https://ci.testling.com/dominictarr/sha.js)\n\n## Example\n\n``` js\nvar createHash = require('sha.js')\n\nvar sha256 = createHash('sha256')\nvar sha512 = createHash('sha512')\n\nvar h = sha256.update('abc', 'utf8').digest('hex')\nconsole.log(h) //ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad\n\n//LEGACY, do not use in new systems:\nvar sha0 = createHash('sha')\nvar sha1 = createHash('sha1')\n\n\n```\n\n## supported hashes\n\nsha.js currently implements:\n\n\n* sha256\n* sha512\n* sha1 (legacy, no not use in new systems)\n* sha (legacy, no not use in new systems)\n\n## Note\n\nNote, this doesn't actually implement a stream, but wrapping this in a stream is trivial.\nbut is does update incrementally, so you can hash things larger than ram, and also, since it reuses\nthe typedarrays, it uses a constant amount of memory (except when using base64 or utf8 encoding,\nsee code comments)\n\n\n## Acknowledgements\n\nThis work is derived from Paul Johnston's [\"A JavaScript implementation of the Secure Hash Algorithm\"]\n(http://pajhome.org.uk/crypt/md5/sha1.html)\n\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/crypto-browserify/sha.js/issues"
  },
  "_id": "sha.js@2.4.2",
  "_from": "sha.js@>=2.3.6 <3.0.0"
}
